basic calculator like the one on your iphone. 

use cases/ project requriements to be considered functioning: 

1. Be able to do basic math operations basically start by creating functions in js for adding, subtracting, multiplying, and dividing. 

2. a calc operation would consist of a number an operator and another number

ex: 7 + 3

    I'd create 3 variables ( one for each of these parts of a calculator operation.)

    use these variables to update the display on screen. 
    
3. function called operation that takes the operator and 2 numbers and then calls one of the above functions on the numbers.

4. create a basic html calculator with buttons for each digit each of the above functions and the equals sign. and add a clear button.

5. create functions that populate the display when you click the number and buttons
also save the display value in a varaible to then be used in the calculations. store the first and second numbers that are input into the valculator, utilize the operator the user selects, and then use the operation function on the two numbers when the user presses the = button. 

        flow: 
            users types, 
            as soon as user presses an operator, save the variable for that number and then the operator,
            user types another number,
            as soon as user clicks equal save the second number into a var, compute and then output the answer. 


            once operate is called update the display with the code that is used to populate the screen 

add keyboard support to the program ( + on keyboard presses + on calc you can use keystroke and dom event listeners)

add a . btton to allow floating poitn calcs and disable the button if there is already one . on the screen in a given num (1st and 3rd var)

add a backspace/delete button

limits/bugs: 

    calc should not evaluate more than a single pair of numbers at a time. 

        ex: 
            12 + 7 - 

            program should compute 12 + 10 (22) and then do the subtraction operator. 

            22 becomes the new first number 

    round answers to avoid overflow 

    make sure equals can only be executed if there is a full statement (num operator num) in place. 

    make sure the user cannot divide by 0 




